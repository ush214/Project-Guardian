rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function approvalsDoc(uid) {
      return get(/databases/$(database)/documents/system/approvals/users/$(uid));
    }

    function allowlistDoc(uid) {
      return get(/databases/$(database)/documents/system/allowlist/users/$(uid));
    }

    function isAdmin() {
      return isSignedIn() && (
        approvalsDoc(request.auth.uid).data.role == "admin" ||
        allowlistDoc(request.auth.uid).data.admin == true ||
        request.auth.token.admin == true
      );
    }

    function isApproved() {
      return isSignedIn() && (
        approvalsDoc(request.auth.uid).data.status == "approved" ||
        allowlistDoc(request.auth.uid).data.allowed == true ||
        request.auth.token.approved == true
      );
    }

    // Approvals SoT
    match /system/approvals/users/{uid} {
      // Users can create their own pending record if missing
      allow create: if isSignedIn() && request.auth.uid == uid;

      // Users can read their own record; admins can read all
      allow read: if (isSignedIn() && request.auth.uid == uid) || isAdmin();

      // Only admins can update (e.g., approve)
      allow update: if isAdmin();

      // No deletes by clients
      allow delete: if false;
    }

    // Legacy allowlist (admin-only management)
    match /system/allowlist/users/{uid} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }

    // Example protected collections (adjust names to your app)
    match /tasks/{doc=**} {
      allow read, write: if isApproved();
    }

    match /resourcesData/{doc=**} {
      allow read, write: if isApproved();
    }

    // Optional: user profile docs
    match /users/{uid} {
      allow create: if isSignedIn() && request.auth.uid == uid;
      allow read, update: if (isSignedIn() && request.auth.uid == uid) || isAdmin();
      allow delete: if false;
    }

    // Deny everything else by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}