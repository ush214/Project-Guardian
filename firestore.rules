rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }
    // Admin via allowlist (not just custom claims)
    function isAdmin() {
      return isSignedIn() &&
        exists(/databases/$(database)/documents/system/allowlist/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/system/allowlist/users/$(request.auth.uid)).data.admin == true;
    }
    // Contributor via allowlist
    function isContributor() {
      return isSignedIn() &&
        exists(/databases/$(database)/documents/system/allowlist/users/$(request.auth.uid)) &&
        (
          get(/databases/$(database)/documents/system/allowlist/users/$(request.auth.uid)).data.contributor == true ||
          get(/databases/$(database)/documents/system/allowlist/users/$(request.auth.uid)).data.admin == true
        );
    }
    // Any allowlisted user (allowed true OR contributor/admin)
    function isAllowlisted() {
      return isSignedIn() &&
        exists(/databases/$(database)/documents/system/allowlist/users/$(request.auth.uid)) &&
        (
          get(/databases/$(database)/documents/system/allowlist/users/$(request.auth.uid)).data.allowed == true ||
          get(/databases/$(database)/documents/system/allowlist/users/$(request.auth.uid)).data.contributor == true ||
          get(/databases/$(database)/documents/system/allowlist/users/$(request.auth.uid)).data.admin == true
        );
    }

    // Users may submit an approval request for themselves
    match /system/approvals/users/{uid} {
      allow create: if isSignedIn() && request.auth.uid == uid;
      allow get: if isSignedIn() && (request.auth.uid == uid || isAdmin());
      allow list: if isAdmin();
      allow update, delete: if isAdmin();
    }

    // Admin-maintained allowlist (authoritative source of roles)
    match /system/allowlist/users/{uid} {
      // Users can read their own allowlist entry (optional; remove if you prefer to hide)
      allow get: if isSignedIn() && request.auth.uid == uid;
      // Only admins list and modify allowlist
      allow list: if isAdmin();
      allow create, update, delete: if isAdmin();
    }

    // Public WERP assessments
    match /artifacts/{appId}/public/data/werpassessments/{docId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }

    // Task manager (approved users can read; contributors/admin can write; delete stays admin)
    match /artifacts/{appId}/private/admin/tasks/{taskId} {
      allow get, list: if isAllowlisted();
      allow create, update: if isContributor();
      allow delete: if isAdmin();
    }
  }
}