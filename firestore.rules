rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    // Placeholder role helpers; wire these to your auth model as needed.
    function hasRole(r) {
      // Expect custom claims: request.auth.token.role in ['contributor','admin']
      return isSignedIn() && (request.auth.token.role == r || (r == 'contributor' && request.auth.token.role == 'admin'));
    }
    function isContributor() {
      return hasRole('contributor') || hasRole('admin');
    }
    function isAdmin() {
      return hasRole('admin');
    }

    // Open read for public pages
    match /{document=**} {
      allow get, list: if true;
    }

    // Monitoring events under any wreck doc
    match /{collectionId}/{docId}/monitoring/{type}/{eventId} {
      allow create, update: if isContributor();
      allow read: if true;
    }

    // Wreck root updates for alerts array and reassessment flags
    match /{collectionId}/{docId} {
      allow update: if isContributor();
      allow read: if true;
    }
  }
}