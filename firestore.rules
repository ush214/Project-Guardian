rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    // Admin via allowlist
    function isAdmin() {
      return isSignedIn()
        && exists(/databases/$(database)/documents/system/allowlist/users/$(request.auth.uid))
        && get(/databases/$(database)/documents/system/allowlist/users/$(request.auth.uid)).data.admin == true;
    }

    // Contributor via allowlist (admins are contributors by superset)
    function isContributor() {
      return isSignedIn()
        && exists(/databases/$(database)/documents/system/allowlist/users/$(request.auth.uid))
        && (
          get(/databases/$(database)/documents/system/allowlist/users/$(request.auth.uid)).data.contributor == true ||
          get(/databases/$(database)/documents/system/allowlist/users/$(request.auth.uid)).data.admin == true
        );
    }

    // Any allowlisted user: allowed OR contributor OR admin
    function isAllowlisted() {
      return isSignedIn()
        && exists(/databases/$(database)/documents/system/allowlist/users/$(request.auth.uid))
        && (
          get(/databases/$(database)/documents/system/allowlist/users/$(request.auth.uid)).data.allowed == true ||
          get(/databases/$(database)/documents/system/allowlist/users/$(request.auth.uid)).data.contributor == true ||
          get(/databases/$(database)/documents/system/allowlist/users/$(request.auth.uid)).data.admin == true
        );
    }

    // Registration approvals queue
    match /system/approvals/users/{uid} {
      // user can file a request for themselves
      allow create: if isSignedIn() && request.auth.uid == uid;
      allow get: if isSignedIn() && (request.auth.uid == uid || isAdmin());
      allow list, update, delete: if isAdmin();
    }

    // Admin-maintained allowlist
    match /system/allowlist/users/{uid} {
      // let a user read their own allowlist entry (for role resolution UX)
      allow get: if isSignedIn() && request.auth.uid == uid;
      // only admins can list or modify
      allow list: if isAdmin();
      allow create, update, delete: if isAdmin();
    }

    // Public WERP assessments
    match /artifacts/{appId}/public/data/werpassessments/{docId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }

    // Task data: allowlisted users can read/create/update; admin-only delete
    match /artifacts/{appId}/private/admin/tasks/{taskId} {
      allow get, list: if isAllowlisted();
      allow create, update: if isAllowlisted();
      allow delete: if isAdmin();
    }

    // Task meta/sequence for ID allocation (same allowlist as tasks)
    match /artifacts/{appId}/private/admin/tasks_meta/{docId} {
      allow read: if isAllowlisted();
      allow create, update: if isAllowlisted();
      allow delete: if isAdmin();
    }
  }
}